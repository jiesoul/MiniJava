PARSER_BEGIN(MyParser)
package me.jiesoul.minijava.parser;
class MyParser {}
PARSER_END(MyParser)

TOKEN : {
      < IF: "if" >
    | < #DIGIT: ["0"-"9"] >
    | < ID: ["a"-"z"](["a"-"z"] | <DIGIT>)* >
    | < NUM: (<DIGIT>)+ >
    | < REAL: ( (<DIGIT>)+ "." (<DIGIT>)* ) |
              ( (<DIGIT>)* "." (<DIGIT>)+ ) >
    | < WHILE: "while" >
    | < BEGIN: "begin" >
    | < END: "end" >
    | < DO: "do" >
    | < THEN: "THEN" >
    | < ELSE: "else" >
    | < SEMI: ";" >
    | < ASSIGN: "=" >
}

SKIP: {
      <"--" (["a"-"z"])* ("\n" | "\r" | "\r\n")>
    | " "
    | "\t"
    | "\n"
}

void Prog():
{}
{
    StmList() <EOF>
}

void StmList():
{}
{
    Stm() StmListPrime()
}

void StmListPrime():
{}
{
    (";" Stm() StmListPrime() )?
}

void Stm():
{}
{
      <ID> "=" <ID>
    | "while" <ID> "do" Stm()
    | "begin" StmList() "end"
    | LOOKAHEAD(5)
      "if" <ID> "then" Stm()
    | "if" <ID> "then" Stm() "else" Stm()
}

void Start() :
{}
{ ( <IF> | <ID> | <NUM> | <REAL> )* }